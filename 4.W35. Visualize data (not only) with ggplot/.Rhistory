S -> A
A -> M
S -> M
}")
coordinates(dag_south_age_marriage) <- list( x=c(A=0,S=1,M=1) , y=c(A=0,S=-1, M=0) )
drawdag(dag_south_age_marriage)
#implied conditional independencies
impliedConditionalIndependencies(dag_south_age_marriage)
# Southernness, Age and Marriage Rate
model_S_A_M_full <- quap(
alist(
#South (S --> M)
M_std ~ dnorm(mu,sigma),
mu <- a[South] + b_age*A_std,
a[South] ~ dnorm(0,0.5),
b_age ~ dnorm(0,0.5),
sigma ~ dexp(1)
), data=d )
precis(model_S_A_M_full, depth=2)
plot(coeftab(model_S_A_M_full), by.model = TRUE)+ mtext( "Figure 2.1. Plotted Coefficients of the Model" )
# Southernness, Age and Marriage Rate
model_S_A_M_full <- quap(
alist(
#South (S --> M)
M_std ~ dnorm(mu,sigma),
mu <- a[South] + b_age*A_std,
a[South] ~ dnorm(0,0.5),
b_age ~ dnorm(0,0.5),
sigma ~ dexp(1)
), data=d )
precis(model_S_A_M_full, depth=2)
plot(coeftab(model_S_A_M_full), by.model = TRUE)+ mtext( "Figure 2.1. Plotted Coefficients of the Model" )
knitr::opts_chunk$set(fig.width=5,fig.height=3)
pacman::p_load(usethis,dplyr, tidyverse, ggplot2, rstan,ggthemes, dagitty,ggdag,corrplot,truncnorm)
tinytex::tlmgr_update()
library(rethinking)
knitr::opts_chunk$set(fig.width=5,fig.height=3)
pacman::p_load(usethis,dplyr, tidyverse, ggplot2, rstan,ggthemes, dagitty,ggdag,corrplot,truncnorm, rethinking)
setwd("~/Desktop/Cognitive Science/4th semester/Methods 4/Portfolios/methods-4-portfolio-3-rikkeuldbaek")
ls.str(model_list)
knitr::opts_chunk$set(fig.width=5, fig.height=3)
#load packages
pacman::p_load(ggplot2, tidyverse,dplyr, rethinking, readbulk, rstan, dagitty, ggdag, truncnorm, plyr, corrplot, reshape, gridExtra, tinytex)
tinytex::tlmgr_update()
#set working environment
setwd("~/Desktop/Cognitive Science/4th semester/Methods 4/Portfolios/methods-4-portfolio-3-rikkeuldbaek")
#load & merge the training data
data <- read.csv("/Users/rikkeuldbaek/Desktop/Cognitive Science/4th semester/Methods 4/Portfolios/methods-4-portfolio-3-rikkeuldbaek/data/titanic_train.csv")
############# Data preparation for analytic purposes
#making sex into 1 and 0
data$Sex <- ifelse(data$Sex == "female", 0, 1)
#adding median age to the NA values
age_median<- round(median(data$Age, na.rm = TRUE),digits =0) # mean, NA's excluded
data$Age[is.na(data$Age)] <- age_median
# Calculating fare per person (instead of fare)
tickets <- aggregate(data$Ticket, by=list(data$Ticket), function(x) sum( !is.na(x) )) #count how many tickets were bought in individually and in group
data$fare_pp<-apply(data, 1, function(x) as.numeric(x["Fare"]) / tickets[which(tickets[, 1] == x["Ticket"]), 2]) #calculating fare per person
#Sex
n <- nrow(data) # Number of rows in total
percent_sex <- (table(data$Sex)/n * 100);print(percent_sex) #percentage of gender
barplot(percent_sex, ylim = c(0, 100), ylab = "percent", main = "Barplot of percentage of Sex")
#pclass
n <- nrow(data) # Number of rows in total
percent_class <- (table(data$Pclass)/n * 100);print(percent_class) #percentage of gender
barplot(percent_class, ylim = c(0, 100), ylab = "percent", main = "Barplot of percentage of each Class")
#survival
n <- nrow(data) # Number of rows in total
percent_survival <- (table(data$Survived)/n * 100);print(percent_survival) #percentage of gender
barplot(percent_survival, ylim = c(0, 100), ylab = "percent", xlab = "survival", main = "Barplot of percentage of Survival")
#age
data %>% ggplot(aes(Age)) + geom_histogram(binwidth = 3, color = "black", fill = "gray")+ geom_vline(aes(xintercept = median(Age, na.rm = FALSE)), linetype = "dashed", size = 0.6, color = "red")+
labs(title = "Age and median Age of passengers")
#fare and Class
ggplot(data, aes(x=Pclass, y=fare_pp, fill=as.factor(Pclass)))+
geom_bar(stat='summary', fun =mean, width = 0.25)+
labs(x = "Passenger Class", y = "Fare")+
theme_minimal()+ ggtitle("Passenger Class and Fare per person ")
#sex and class
ggplot(data, aes(x=Pclass, y=PassengerId, fill=as.factor(Sex))) +
geom_bar(stat="identity")+
theme_minimal()+
ggtitle("Passenger Class and Sex ")
# DAG
dag <- dagitty( "dag {
Age -> Survival
Sex -> Survival
Class -> Survival
Fare_pp-> Class
Sex -> Class
}")
# Plotting the DAG
coordinates(dag) <- list(
x=c(Age = 0, Class= 0, Sex = 2, Fare_pp = 0, Survival= 0) ,
y=c(Age = -0.5, Class= 0.5, Sex = 0, Fare_pp = 1, Survival= 0) )
drawdag(dag)
impliedConditionalIndependencies(dag)
set.seed(3)
N = 1000
#simulation
sex_sim <-  sample(0:1, size=N, replace=TRUE, prob=c(.352, .648))
#plot
percentage_sim_sex <- (table(sex_sim)/N * 100);print(percentage_sim_sex ) #percentage of gender
barplot(percentage_sim_sex , ylim = c(0, 100), ylab = "percent", xlab = "survival", main = "Barplot of percentage of simulated Sex")
# overview of variable from original data
mean(data$fare_pp)
sd(data$fare_pp)
min(data$fare_pp)
max(data$fare_pp)
#simulation
fare_pp_sim<- rtruncnorm(N, a=0, b=221, mean = 17, sd = 21)
#plot
hist(fare_pp_sim)
#simulation of Class dependent on Fare per person
class_sim <- (ifelse(fare_pp_sim < quantile(fare_pp_sim)[3], 3,
ifelse(fare_pp_sim > quantile(fare_pp_sim)[3] & fare_pp_sim < quantile(fare_pp_sim)[4], 2,
1)))
#plot
hist(class_sim)
# overview of variable from original data
mean(data$Age)
sd(data$Age)
min(data$Age)
max(data$Age)
#simulation
age_sim <- rlnorm(N, mean =3 , sd=0.7)
age_sim<- round(age_sim, digits =0) #making it integer
age_sim <- (ifelse(age_sim > 80, median(age_sim), age_sim )) #removing extreme values from age
#plot
hist(age_sim)
#simulation
survival_sim  <- rbinom(N, size=1, prob = (0.5 + sex_sim*0.4 - age_sim*0.002 - class_sim*0.1))
count(is.na(survival_sim))
#plot
df <- tibble(survival_sim, as.factor(sex_sim), class_sim, age_sim)
df %>%
ggplot(aes(x=survival_sim, fill=as.factor(sex_sim)))+
geom_bar(aes(y=..count../sum(..count..)), position = position_dodge()) +
facet_wrap(~ class_sim)+
labs(x = "Survival", y="% of Passengers", title = "Survival by Sex and Class")
#creating df
sim_df <- tibble(survival = survival_sim, #still 0 and 1
class = as.integer(class_sim),
age = scale(age_sim),# good practice to scale
sex = (sex_sim+1), #good practice to make 1's and 2's for index
fare = scale(fare_pp_sim) # good practice to scale
)
#preparing for model by making variables integer
sim_df$survival <-  as.integer(sim_df$survival)
sim_df$sex<- as.integer(sim_df$sex)
model_data <- list(
sex = (data$Sex+1),
class = as.integer(data$Pclass),
survival = data$Survived,
age = scale(data$Age),
fare = scale(data$fare_pp)
)
#Make things integer
model_data$sex <-  as.integer(model_data$sex)
model_data$survival <-  as.integer(model_data$survival)
ls.str(model_data)
setwd("~/Desktop/Bachelor 2022")
knitr::opts_chunk$set(echo = TRUE)
temp <- tempfile(fileext = ".csv")
download.file("https://drive.google.com/drive/folders/1kOEqO96-cIiSSUlFlsvhsiONtUXPi4q9",
temp)
out <- unzip(temp, exdir = tempdir())
data <- read.csv(out[14], sep = ";")
View(data)
file<- download.file("https://drive.google.com/drive/folders/1kOEqO96-cIiSSUlFlsvhsiONtUXPi4q9",
temp)
data <- read.csv(file, sep = ";")
filezz<- download.file("https://drive.google.com/drive/folders/1kOEqO96-cIiSSUlFlsvhsiONtUXPi4q9",
temp)
data <- read.csv(filezz, sep = ";")
install.packages("googlesheets4")
# once installed
library(googlesheets4)
# running read_sheet() will ask you to authenticate with Google first
hsbc2014<- read_sheet("https://drive.google.com/file/d/1Nes6x0xB-M2tnPu4DA0AJbD0hVuiXDc4/view?usp=sharing")
id <- "https://drive.google.com/file/d/1Nes6x0xB-M2tnPu4DA0AJbD0hVuiXDc4/view?usp=sharing" # google file ID
hsbc2014<- read.csv(sprintf("https://drive.google.com/drive/folders/1BbB-i03ZDjczop8mucj3gp0H9udPwNrJ", id))
hsbc2014<- read.csv(sprintf("https://docs.google.com/uc?id=%s&export=download", id))
hsbc2014<- read.csv(sprintf("https://drive.google.com/file/d/1Nes6x0xB-M2tnPu4DA0AJbD0hVuiXDc4/view?usp=sharing..&export=download", id))
?sprintf()
install.packages("googledrive")
library("googledrive")
install.packages("googledrive")
drive_find(type = "csv")
library("googledrive")
drive_find(type = "csv")
hsbc2014<- drive_download("HBSC2014OAed1.1_F1.csv", type = "csv")
View(hsbc2014)
hsbc2014<- drive_download("HBSC2014OAed1.1_F1", type = "csv")
hsbc2014<- drive_download("HBSC2014OAed1.1_F1.csv")
drive_find(type = "csv")
hsbc2014<- drive_download(
"HBSC2014OAed1.1_F1.csv",
path = "HBSC2014OAed1.1_F1.csv",
overwrite = TRUE
)
HBSC2014 <- read.csv("~/Desktop/Bachelor 2022/HBSC2014OAed1.1_F1.csv", header=FALSE)
View(HBSC2014)
hsbc2014<- drive_download(
"HBSC2014OAed1.1_F1.csv",
path = "HBSC2014OAed1.1_F1.csv",
overwrite = TRUE
)
?drive_download()
library(tidyverse)
Western_Europe <- read_csv("data/homicide-rates-across-western-europe.csv")
setwd("~/Desktop/OneDrive - Aarhus Universitet/Cognitive Science/5th semester/Cultural Datascience/AU674347_uldbaek_rikke/4.W35. Visualize data (not only) with ggplot/HomicideHistory_exercise")
# setting working directory
setwd("~/Desktop/OneDrive - Aarhus Universitet/Cognitive Science/5th semester/Cultural Datascience/AU674347_uldbaek_rikke/4.W35. Visualize data (not only) with ggplot/HomicideHistory_exercise")
Western_Europe <- read_csv("data/homicide-rates-across-western-europe.csv")
View(Western_Europe)
head(Western_Europe)
# YOUR CODE
names(Western_Europe)
rename(Western_Europe, "homicide_rate"= "Homicide rate in Europe over long-term (per 100,000) (homicides per 100,000 people)") #rename variable
Western_Europe<- rename(Western_Europe, "homicide_rate"= "Homicide rate in Europe over long-term (per 100,000) (homicides per 100,000 people)") #rename variable
# Checking the names
names(Western_Europe)
# Renaming the variable
Western_Europe<- rename(Western_Europe, "homicides_per_100k"= "Homicide rate in Europe over long-term (per 100,000) (homicides per 100,000 people)")
Western_Europe <- read_csv("data/homicide-rates-across-western-europe.csv")
# Checking the names
names(Western_Europe)
# Renaming the variable
Western_Europe<- rename(Western_Europe, "homicides_per_100k"= "Homicide rate in Europe over long-term (per 100,000) (homicides per 100,000 people)")
# Checking the names
names(Western_Europe)
ggplot(data = Western_Europe, aes(x= Year, y= homicides_per_100k, color = Entity))+
geom_bar()+
labs(x = "Year", y = "Homicides per 100k")+
ggtitle("Long-term trends is in homicides")+
scale_fill_brewer(palette = "Blues")
ggplot(data = Western_Europe, aes(x= Year, y= homicides_per_100k, color = Entity))+
geom_bar()+
labs(x = "Year", y = "Homicides per 100k")+
ggtitle("Long-term trends is in homicides")+
scale_fill_brewer(palette = "Blues")
ggplot(data = Western_Europe, aes(x= Year, y= homicides_per_100k, color = Entity))+
geom_bar(stat='summary', fun.y =mean, width = 0.4)+
labs(x = "Year", y = "Homicides per 100k")+
ggtitle("Long-term trends is in homicides")+
scale_fill_brewer(palette = "Blues")
ggplot(data = Western_Europe, aes(x= Year, y= homicides_per_100k, color = Entity))+
geom_histogram()+
labs(x = "Year", y = "Homicides per 100k")+
ggtitle("Long-term trends is in homicides")+
scale_fill_brewer(palette = "Blues")
ggplot(data = Western_Europe, aes(x= Year, y= homicides_per_100k))+
geom_histogram()+
labs(x = "Year", y = "Homicides per 100k")+
ggtitle("Long-term trends is in homicides")+
scale_fill_brewer(palette = "Blues")
ggplot(data = Western_Europe, aes(x= Year, y= homicides_per_100k))+
geom_bar()+
facet_wrap(~Entity, nrow =2)
ggplot(data = Western_Europe, aes(x= Year, y= homicides_per_100k))+
geom_bar(stat='summary', fun.y =mean, width = 0.4)+
facet_wrap(~Entity, nrow =2)
ggplot(data = Western_Europe, aes(x= Year, y= homicides_per_100k))+
geom_bar(stat='summary', fun.y =mean, width = 10)+
facet_wrap(~Entity, nrow =2)
labs(x = "Year", y = "Homicides per 100k")+
ggtitle("Long-term trends is in homicides")+
theme_minimal()
ggplot(data = Western_Europe, aes(x= Year, y= homicides_per_100k))+
geom_bar(stat='summary', fun.y =mean, width = 10)+
facet_wrap(~Entity, nrow =2)
ggplot(data = Western_Europe, aes(x= Year, y= homicides_per_100k))+
geom_bar(stat='summary', fun.y =mean, width = 10)+
facet_wrap(~Entity)
ggplot(data = Western_Europe, aes(x= Year, y= homicides_per_100k, color= Entity))+
geom_bar(stat='summary', fun.y =mean, width = 10)+
facet_wrap(~Entity, nrow =2)
ggplot(data = Western_Europe, aes(x= Year, y= homicides_per_100k, color= Entity))+
geom_bar(stat='summary', fun.y =mean, width = 5)+
facet_wrap(~Entity, nrow =2)
ggplot(data = Western_Europe, aes(x= Year, y= homicides_per_100k, color= Entity))+
geom_bar(stat='summary', fun.y =mean, width = 1)+
facet_wrap(~Entity, nrow =2)
ggplot(data = Western_Europe, aes(x= Year, y= homicides_per_100k, color= Entity))+
geom_histogram(binwidth = 100)+
facet_wrap(~Entity, nrow =2)
ggplot(data = Western_Europe, aes(x= Year, y= homicides_per_100k, color= Entity))+
geom_histogram(binwidth = 100)
ggplot(data = Western_Europe, aes(x= Year, y= homicides_per_100k, color= Entity))
ggplot(data = Western_Europe, aes(x= Year, y= homicides_per_100k, color= Entity))+ geom_histogram()
?geom_histogram
ggplot(data = Western_Europe, aes(x= Year, y= homicides_per_100k, color= Entity))+ geom_histogram()+ stat_bin()
ggplot(data = Western_Europe, aes(x= Year, y= homicides_per_100k, color= Entity))+ geom_histogram()+ stat_count()
ggplot(data = Western_Europe, aes(x= Year, y= homicides_per_100k, color= Entity))+ geom_histogram()+ stat_bin(
mapping = NULL
geom = "bar"
)
ggplot(data = Western_Europe, aes(x= Year, y= homicides_per_100k, color= Entity))+ geom_histogram()+ stat_bin(
mapping = NULL,
geom = "bar"
)
ggplot(data = Western_Europe, aes(x= Year, y= homicides_per_100k, color= Entity))+ geom_histogram(binwidth = 0.5)+ stat_bin(
mapping = NULL,
geom = "bar"
)
ggplot(data = Western_Europe, aes(x= Year, y= homicides_per_100k, color= Entity))+ geom_histogram(binwidth = 0.5, stat="identity")
ggplot(data = Western_Europe, aes(x= Year, y= homicides_per_100k, color= Entity))+ geom_histogram(binwidth = 0.5, stat="identity")+
facet_wrap(~Entity, nrow =2)
ggplot(data = Western_Europe, aes(x= Year, y= homicides_per_100k, color= Entity))+ geom_histogram(binwidth = 0.1, stat="identity")+
facet_wrap(~Entity, nrow =2)
ggplot(data = Western_Europe, aes(x= Year, y= homicides_per_100k, color= Entity))+ geom_histogram(binwidth = 0.001, stat="identity")+
facet_wrap(~Entity, nrow =2)
ggplot(data = Western_Europe, aes(x= Year, y= homicides_per_100k, color= Entity))+ geom_histogram(binwidth = 100, stat="identity")+
facet_wrap(~Entity, nrow =2)
ggplot(data = Western_Europe, aes(x= Year, y= homicides_per_100k, color= Entity))+ geom_histogram(stat="identity")+
facet_wrap(~Entity, nrow =2)
#plotting the homicide trends
ggplot(data = Western_Europe, aes(x= Year, y= homicides_per_100k, color= Entity))+ geom_histogram(stat="identity")+
labs(x = "Year", y = "Homicides per 100k")+
ggtitle("Long-term trends is in homicides")+
theme_minimal()
#plotting the homicide trends
ggplot(data = Western_Europe, aes(x= Year, y= homicides_per_100k, color= Entity))+ geom_histogram(stat="identity")+
facet_wrap(~Entity, nrow =2)
#plotting the homicide trends
ggplot(data = Western_Europe, aes(x= Year, y= homicides_per_100k, color= Entity))+ geom_histogram(stat="identity")+
facet_wrap(~Entity, nrow =3, ncol = 2)
# loading the data
kings <- read_csv("data/kings.csv")
View(kings)
# loading the data
kings <- read_csv("data/kings.csv")
#loading packages
pacman::p_load(tidyverse,dplyr, data.table, ggplot2, tibble, devtools, readr)
# loading the data
kings <- read_delim("kings.csv", ";", escape_double = FALSE,
trim_ws = TRUE)
# loading the data
kings <- read_delim("data/kings.csv", ";", escape_double = FALSE,
trim_ws = TRUE)
#checking the data
ls.str(kings)
View(kings)
#Cleaning the data for good practice
kings <- na.omit(kings)
kings$Yearasruler <-  as.numeric(kings$Yearasruler)
#checking the data
ls.str(kings)
kings <- kings %>%
mutate(midyear= (End_date - (End_date - Start_date)/2))
#ggplot plotting midyear on x axis and duration on y axis
ggplot(kings,  aes(midyear, Yearsaruler)) +
geom_point() +
geom_smooth() +
ggtitle('Scatter plot with the regression line: quicker using default geom_smooth for lm')
#ggplot plotting midyear on x axis and duration on y axis
ggplot(kings,  aes(midyear, Yearasruler)) +
geom_point() +
geom_smooth()
#ggplot plotting midyear on x axis and duration on y axis
ggplot(kings,  aes(midyear, Yearasruler)) +
geom_point() +
```
#ggplot plotting midyear on x axis and duration on y axis
ggplot(kings,  aes(midyear, Yearasruler)) +
geom_point() +
```
#ggplot plotting midyear on x axis and duration on y axis
ggplot(kings,  aes(midyear, Yearasruler)) +
geom_point()
#ggplot plotting midyear on x axis and duration on y axis
ggplot(kings,  aes(midyear, Yearasruler)) +
geom_point()+
geom_smooth()+
labs(x = "Middle year of ruling", y = "Years a ruler")+
ggtitle("Long-term trends is in homicides")+
theme_minimal()
#ggplot plotting midyear on x axis and duration on y axis
ggplot(kings,  aes(midyear, Yearasruler)) +
geom_point()+
geom_smooth()+
labs(x = "Median year of ruling", y = "Years a ruler")+
ggtitle("Reign duration among Danish rulers through time")+
theme_minimal()
#ggplot plotting midyear on x axis and duration on y axis
ggplot(kings,  aes(midyear, Yearasruler)) +
geom_point()+
#geom_smooth()+
labs(x = "Median year of ruling", y = "Years a ruler")+
ggtitle("Reign duration among Danish rulers through time")+
theme_minimal()
#ggplot plotting midyear on x axis and duration on y axis
ggplot(kings,  aes(midyear, Yearasruler)) +
geom_point()+
geom_smooth()+
labs(x = "Median year of ruling", y = "Years a ruler")+
ggtitle("Reign duration among Danish rulers through time")+
theme_minimal()
#ggplot plotting midyear on x axis and duration on y axis
ggplot(kings,  aes(midyear, Yearasruler)) +
geom_point()+
geom_smooth()+
labs(x = "Median year of ruling", y = "Years of ruling")+
ggtitle("Reign duration among Danish rulers through time")+
theme_minimal()
min(kings$Start_date)
max(kings$End_date)
min(Western_Europe$Year)
max(Western_Europe$Year)
#checking variables for comparison
min(kings$midyear)
max(kings$midyear)
1843.5 -2016
#plotting the homicide trends
ggplot(data = Western_Europe, aes(x= Year, y= homicides_per_100k, color= Entity))+ geom_histogram(stat="identity")+
facet_wrap(~Entity, nrow =3, ncol = 2)
#plotting the homicide trends
ggplot(data = Western_Europe, aes(x= Year, y= homicides_per_100k, color= Entity))+ geom_histogram(stat="identity")+
facet_wrap(~Entity, nrow =3, ncol = 2)
#plotting the homicide trends
p <- ggplot(data = Western_Europe, aes(x= Year, y= homicides_per_100k, color= Entity))+ geom_histogram(stat="identity")+
facet_wrap(~Entity, nrow =3, ncol = 2)
p+ theme(legend.position="bottom")
p+ theme(legend.position="bottom", legend.title =  "Country")
p+ theme(legend.position="bottom", element_text(colour="blue", size=10,
face="bold"))
p+ theme(legend.position="bottom", element_text(colour="blue", size=10))
p+ theme(legend.position="bottom", legend.title = element_text(colour="blue", size=10,
face="bold"))
?element_text
p <- theme(legend.position="bottom")
p+ guides(fill=guide_legend(title="country"))
p + guides(fill=guide_legend(title="country"))
p <- guides(fill=guide_legend(title="country"))
p
p + theme(legend.position="bottom")
labs(x = "Year", y = "Homicides per 100k")+52
<
#plotting the homicide trends
p <- ggplot(data = Western_Europe, aes(x= Year, y= homicides_per_100k, color= Entity))+ geom_histogram(stat="identity")+
facet_wrap(~Entity, nrow =3, ncol = 2)
p + theme(legend.position="bottom")
p + scale_fill_discrete(name = "Country")
#title
legend_title <- "Country"
ggtitle("Long-term trends is in homicides")+
theme_minimal()+
scale_fill_manual(legend_title)
#plotting the homicide trends
p <- ggplot(data = Western_Europe, aes(x= Year, y= homicides_per_100k, color= Entity))+ geom_histogram(stat="identity")+
facet_wrap(~Entity, nrow =3, ncol = 2)
#title
legend_title <- "Country"
labs(x = "Year", y = "Homicides per 100k")+52
#plotting the homicide trends
p <- ggplot(data = Western_Europe, aes(x= Year, y= homicides_per_100k, color= Entity))+ geom_histogram(stat="identity")+
facet_wrap(~Entity, nrow =3, ncol = 2)
p <- ggplot(data = Western_Europe, aes(x= Year, y= homicides_per_100k, color= Entity))+ geom_histogram(stat="identity")+
facet_wrap(~Entity, nrow =3, ncol = 2)
labs(x = "Year", y = "Homicides per 100k")+52
ggtitle("Long-term trends is in homicides")+
theme_minimal()+
scale_fill_manual(legend_title)
#plotting the homicide trends
ggplot(data = Western_Europe, aes(x= Year, y= homicides_per_100k, color= Entity))+ geom_histogram(stat="identity")+
facet_wrap(~Entity, nrow =3, ncol = 2)
#plotting the homicide trends
p<- ggplot(data = Western_Europe, aes(x= Year, y= homicides_per_100k, color= Entity))+ geom_histogram(stat="identity")+
facet_wrap(~Entity, nrow =3, ncol = 2)
p + theme(legend.position="bottom")
#plotting the homicide trends
ggplot(data = Western_Europe, aes(x= Year, y= homicides_per_100k, color= Entity))+ geom_histogram(stat="identity")+
facet_wrap(~Entity, nrow =3, ncol = 2)
#plotting the homicide trends
ggplot(data = Western_Europe, aes(x= Year, y= homicides_per_100k, color= Entity))+ geom_histogram(stat="identity")+
facet_wrap(~Entity, nrow =3, ncol = 2)+
labs(x = "Year", y = "Homicides per 100k")+
ggtitle("Long-term trends is in homicides")+
theme_minimal()+
guide_legend(title="my awesome title")
ggplot(data = Western_Europe, aes(x= Year, y= homicides_per_100k, color= Entity))+ geom_histogram(stat="identity")+
facet_wrap(~Entity, nrow =3, ncol = 2)+
labs(x = "Year", y = "Homicides per 100k")+
ggtitle("Long-term trends is in homicides")+
theme_minimal()+
guide_legend(title="my awesome title")
#plotting the homicide trends
p<- ggplot(data = Western_Europe, aes(x= Year, y= homicides_per_100k, color= Entity))+ geom_histogram(stat="identity")+
facet_wrap(~Entity, nrow =3, ncol = 2)+
labs(x = "Year", y = "Homicides per 100k")+
ggtitle("Long-term trends is in homicides")+
theme_minimal()
p +guides(color=guide_legend(title="sale year"))
p + theme(legend.position="bottom") + guides(color=guide_legend(title="Country"))
labs(x = "Year", y = "Homicides per 100k")+52
labs(x = "Year", y = "Homicides per 100k")+
ggtitle("Long-term trends is in homicides")+
theme_minimal()
#plotting the homicide trends
ggplot(data = Western_Europe, aes(x= Year, y= homicides_per_100k, color= Entity))+ geom_histogram(stat="identity")+
facet_wrap(~Entity, nrow =3, ncol = 2)+
labs(x = "Year", y = "Homicides per 100k")+
ggtitle("Long-term trends is in homicides")+
theme_minimal()
#ggplot plotting midyear on x axis and duration on y axis
ggplot(kings,  aes(midyear, Yearasruler)) +
geom_point()+
geom_smooth()+
labs(x = "Median year of ruling", y = "Years of ruling")+
ggtitle("Reign duration among Danish rulers through time")+
theme_minimal()
setwd("~/Desktop/OneDrive - Aarhus Universitet/Cognitive Science/5th semester/Cultural Datascience/AU674347_uldbaek_rikke/4.W35. Visualize data (not only) with ggplot")
