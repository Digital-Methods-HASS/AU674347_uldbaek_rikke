for (i in df$year){
if(i %in% years) {
print(paste0(i , " is present yay"))
} else{
print(paste0(i , " is NOT present"))
}
#works fine
GDP_func(df, "Bulgaria", 1967)
#Define a function to calculate GDP of a nation for a given year, using the columns "population" and "GDPpercapita"
GDP_func <- function(data, chosen_nation, chosen_year) { #function arguments
#isolate specified year and country
data <- data[data$country %in% chosen_nation, ]
data <- data[data$year %in% chosen_year, ]
#calculate GDP
GDP <- data$pop * data$gdpPercap
data$GDP <- GDP
return(data)
}
#works fine
GDP_func(df, "Bulgaria", 1967)
#works fine
GDP_func(df, "Bulgaria", 1967)
#Using the function on Denmark
dk_years <- c(1967, 1977, 1987, 1997, 2007, 2017)
for (i in dk_years){
if(i %in% df$year){
df_GDP <- GDP_func(df, "Denmark", i)
}
View(df_GDP)
DENMARK <- data_frame()
for (i in dk_years){
if(i %in% df$year){
dk_GDP <- GDP_func(df, "Denmark", i)
print(dk_GDP)
}else{
print(paste0("data was not found for year: ",i ))
}
# loop 1
b_df <- data_frame()
# loop 2
for(i in 1:length(df$country)){
if(b_df$lifeExp[i] > 70 ==TRUE){
b_df$result[i] = "Long life expectancy"
} else {
if(b_df$lifeExp[i] < 50 ==TRUE){
b_df$result[i] = "Short life expectancy"
} else{
b_df$result[i] = "Medium life expectancy"
}
# loop 2
for(i in 1:length(df$country)){
if(b_df$lifeExp[i] > 70 ==TRUE){
b_df$result[i] = "Long life expectancy"
} else {
if(b_df$lifeExp[i] < 50 ==TRUE){
b_df$result[i] = "Short life expectancy"
} else{
b_df$result[i] = "Medium life expectancy"
}
# loop 1
b_df <- data_frame()
for(i in unique(df$country)){
if(grepl("^B", i)){
b_df <- rbind(b_df, df[which(df$country %in% i),])
}
# loop 2
for(i in 1:length(df$country)){
if(b_df$lifeExp[i] > 70 ==TRUE){
b_df$result[i] = "Long life expectancy"
} else {
if(b_df$lifeExp[i] < 50 ==TRUE){
b_df$result[i] = "Short life expectancy"
} else{
b_df$result[i] = "Medium life expectancy"
}
# For demonstration printing the dataframe for the year 1967
b_df %>%
select(year, country,lifeExp, result) %>%
filter(year== 1967)
#.... if you want to see the rest of the countries for all years, open the b_df:)
# loop 1
b_df <- data_frame()
for(i in unique(df$country)){
if(grepl("^B", i)){
b_df <- rbind(b_df, df[which(df$country %in% i),])
}
# loop 2
for(i in 1:length(df$country)){
if(b_df$lifeExp[i] > 70 ==TRUE){
b_df$result[i] = "Long life expectancy"
} else {
if(b_df$lifeExp[i] < 50 ==TRUE){
b_df$result[i] = "Short life expectancy"
} else{
b_df$result[i] = "Medium life expectancy"
}
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
## set working directory
setwd("~/Desktop/OneDrive - Aarhus Universitet/Cognitive Science/5th semester/Cultural Datascience/AU674347_uldbaek_rikke/6.W43.Practicing functions with Gapminder")
# Chunk 2
#packages
pacman::p_load(tidyverse, ggplot2, gapminder, stringr)
library(gapminder)
#loading data from gapminder package
df <- gapminder
df <- as.data.frame(df)
# Chunk 3
#Define a function to calculate GDP of a nation for a given year, using the columns "population" and "GDPpercapita"
GDP_func <- function(data, chosen_nation, chosen_year) { #function arguments
#isolate specified year and country
data <- data[data$country %in% chosen_nation, ]
data <- data[data$year %in% chosen_year, ]
#calculate GDP
GDP <- data$pop * data$gdpPercap
data$GDP <- GDP
return(data)
}
# function works fine
GDP_func(df, "Bulgaria", 1967)
# Chunk 4
#Using the function on Denmark
dk_years <- c(1967, 1977, 1987, 1997, 2007, 2017)
for (i in dk_years){
if(i %in% df$year){
dk_GDP <- GDP_func(df, "Denmark", i)
print(dk_GDP)
}else{
print(paste0("data was not found for year: ",i ))
}
# Chunk 5
# loop 1
b_df <- data_frame()
for(i in unique(df$country)){
if(grepl("^B", i)){
b_df <- rbind(b_df, df[which(df$country %in% i),])
}
# loop 2
for(i in 1:length(df$country)){
if(b_df$lifeExp[i] > 70){
b_df$result[i] = "Long life expectancy"
} else {
if(b_df$lifeExp[i] < 50){
b_df$result[i] = "Short life expectancy"
} else{
b_df$result[i] = "Medium life expectancy"
}
# For demonstration printing the dataframe for the year 1967
b_df %>%
select(year, country,lifeExp, result) %>%
filter(year== 1967)
#.... if you want to see the rest of the countries for all years, open the b_df:)
# loop 2
for(i in 1:length(df$country)){
if(b_df$lifeExp[i] > 70){
b_df$result[i] = "Long life expectancy"
} else {
if(b_df$lifeExp[i] < 50){
b_df$result[i] = "Short life expectancy"
} else{
b_df$result[i] = "Medium life expectancy"
}
# loop 1
b_df <- data.frame()
for(i in unique(df$country)){
if(grepl("^B", i)){
b_df <- rbind(b_df, df[which(df$country %in% i),])
}
# loop 2
for(i in 1:length(df$country)){
if(b_df$lifeExp[i] > 70){
b_df$result[i] = "Long life expectancy"
} else {
if(b_df$lifeExp[i] < 50){
b_df$result[i] = "Short life expectancy"
} else{
b_df$result[i] = "Medium life expectancy"
}
x = NA
# loop 2
for(i in 1:length(df$country)){
if(b_df$lifeExp[i] > 70){
b_df$result[i] = "Long life expectancy"
} else {
if(b_df$lifeExp[i] < 50){
b_df$result[i] = "Short life expectancy"
} else{
b_df$result[i] = "Medium life expectancy"
}
if(is.na(x)) {x=FALSE} else {if(x) {x}}
}
# loop 2
for(i in 1:length(df$country)){
if((b_df$lifeExp[i] > 70) ==TRUE){
b_df$result[i] = "Long life expectancy"
} else {
if((b_df$lifeExp[i] < 50) ==TRUE){
b_df$result[i] = "Short life expectancy"
} else{
b_df$result[i] = "Medium life expectancy"
}
b_df$lifeExp[30] > 70
# loop 1
b_df <- data.frame()
## LETS FIRST FIND THE COUNTRIES STARTING W A B:
for(i in unique(df$country)) {
if(grepl("^B", i)){
b_df <- rbind(b_df, data[which(df$country %in% i),]) }
}
# loop 2
for(i in 1:length(df$country)){
if(b_df$lifeExp[i] > 70){
b_df$result[i] = "Long life expectancy"
} else {
if(b_df$lifeExp[i] < 50){
b_df$result[i] = "Short life expectancy"
} else{
b_df$result[i] = "Medium life expectancy"
}
# loop 1
b_df <- data.frame()
## LETS FIRST FIND THE COUNTRIES STARTING W A B:
for(i in unique(df$country)) {
if(grepl("^B", i)){
b_df <- rbind(b_df, df[which(df$country %in% i),]) }
}
# loop 2
for(i in 1:length(df$country)){
if(b_df$lifeExp[i] > 70){
b_df$result[i] = "Long life expectancy"
} else {
if(b_df$lifeExp[i] < 50){
b_df$result[i] = "Short life expectancy"
} else{
b_df$result[i] = "Medium life expectancy"
}
### LOOP TIME BABY
b_df <- data.frame()
## LETS FIRST FIND THE COUNTRIES STARTING W A B:
for(i in unique(df$country)) {
if(grepl("^B", i)){
b_df <- rbind(b_df, df[which(df$country %in% i),]) }
}
### NOW I EVALUATE THE LIFEEXP FOR EACH COUNTRY TO ALL TIMES IN ANOTHER LOOP:
for(ii in unique(b_df$country)){
country_dat <- b_df %>%
filter(country == ii)
#### Finding the life expectancy mean over all times
le_mean <- mean(country_dat$lifeExp)
#### printing them for each country
if (le_mean > 70) { ### finding the lifeexps larger than 70
print(paste0("In ", ii, " they have a mean life expetancy above 70 years from 1952 to 2007! It is: ", round(le_mean, digits = 2), " years!"))
} else {
if (le_mean < 50) { ### finding the lifeexps smaller than 50
print(paste0("In ", ii, " they have a mean life expetancy below 50 years from 1952 to 2007! It is: ", round(le_mean, digits = 2), " years!"))
} else {
print(paste0("In ", ii, " they have a mean life expetancy between 50 and 70 years from 1952 to 2007! It is: ", round(le_mean, digits = 2), " years!")) ### finding the lifeexps in between
}
# loop 2
for(i in unique(df$country)){
if(b_df$lifeExp[i] > 70){
b_df$result[i] = "Long life expectancy"
} else {
if(b_df$lifeExp[i] < 50){
b_df$result[i] = "Short life expectancy"
} else{
b_df$result[i] = "Medium life expectancy"
}
# loop 1
b_df <- data.frame()
## LETS FIRST FIND THE COUNTRIES STARTING W A B:
for(i in unique(df$country)) {
if(grepl("^B", i)){
b_df <- rbind(b_df, df[which(df$country %in% i),]) }
}
for(i in unique(df$country)){
if(grepl("^B", i)){
b_df <- rbind(b_df, df[which(df$country %in% i),])
}
# loop 2
for(i in unique(df$country)){
if(b_df$lifeExp[i] > 70){
b_df$result[i] = "Long life expectancy"
} else {
if(b_df$lifeExp[i] < 50){
b_df$result[i] = "Short life expectancy"
} else{
b_df$result[i] = "Medium life expectancy"
}
# For demonstration printing the dataframe for the year 1967
b_df %>%
select(year, country,lifeExp, result) %>%
filter(year== 1967)
#.... if you want to see the rest of the countries for all years, open the b_df:)
# loop 1
b_df <- data.frame()
## LETS FIRST FIND THE COUNTRIES STARTING W A B:
for(i in unique(df$country)) {
if(grepl("^B", i)){
b_df <- rbind(b_df, df[which(df$country %in% i),]) }
}
for(i in unique(df$country)){
if(grepl("^B", i)){
b_df <- rbind(b_df, df[which(df$country %in% i),])
}
# loop 2
for(i in 1:length(df$country)){
if(b_df$lifeExp[i] > 70){
b_df$result[i] = "Long life expectancy"
} else {
if(b_df$lifeExp[i] < 50){
b_df$result[i] = "Short life expectancy"
} else{
b_df$result[i] = "Medium life expectancy"
}
# For demonstration printing the dataframe for the year 1967
b_df %>%
select(year, country,lifeExp, result) %>%
filter(year== 1967)
#.... if you want to see the rest of the countries for all years, open the b_df:)
### LOOP TIME BABY
b_df <- data.frame()
## LETS FIRST FIND THE COUNTRIES STARTING W A B:
for(i in unique(df$country)) {
if(grepl("^B", i)){
b_df <- rbind(b_df, df[which(df$country %in% i),]) }
}
### NOW I EVALUATE THE LIFEEXP FOR EACH COUNTRY TO ALL TIMES IN ANOTHER LOOP:
for(ii in unique(b_df$country)){
country_dat <- b_df %>%
filter(country == ii)
#### Finding the life expectancy mean over all times
le_mean <- mean(country_dat$lifeExp)
#### printing them for each country
if (b_df$lifeExp[i] > 70) { ### finding the lifeexps larger than 70
print(paste0("In ", ii, " they have a mean life expetancy above 70 years from 1952 to 2007! It is: ", round(le_mean, digits = 2), " years!"))
} else {
if (le_mean < 50) { ### finding the lifeexps smaller than 50
print(paste0("In ", ii, " they have a mean life expetancy below 50 years from 1952 to 2007! It is: ", round(le_mean, digits = 2), " years!"))
} else {
print(paste0("In ", ii, " they have a mean life expetancy between 50 and 70 years from 1952 to 2007! It is: ", round(le_mean, digits = 2), " years!")) ### finding the lifeexps in between
}
mean <- mean(b_df$lifeExp)
for(i in 1:length(df$country)){
mean <- mean(b_df$lifeExp[i])
}
### LOOP TIME BABY
b_df <- data.frame()
## LETS FIRST FIND THE COUNTRIES STARTING W A B:
for(i in unique(df$country)) {
if(grepl("^B", i)){
b_df <- rbind(b_df, df[which(df$country %in% i),]) }
}
### NOW I EVALUATE THE LIFEEXP FOR EACH COUNTRY TO ALL TIMES IN ANOTHER LOOP:
for(j in unique(b_df$country)){
new_df <- b_df %>%
filter(country == j)
#### Finding the life expectancy mean over all times
mean <- mean(new_df$lifeExp)
#### printing them for each country
if (mean > 70) { ### finding the lifeexps larger than 70
b_df$result[j] = "Long life expectancy"
} else {
if (mean < 50) { ### finding the lifeexps smaller than 50
b_df$result[j] = "Short life expectancy"
} else {
b_df$result[j] = "Medium life expectancy" ### finding the lifeexps in between
}
View(new_df)
### LOOP TIME BABY
b_df <- data.frame()
## LETS FIRST FIND THE COUNTRIES STARTING W A B:
for(i in unique(df$country)) {
if(grepl("^B", i)){
b_df <- rbind(b_df, df[which(df$country %in% i),]) }
}
### NOW I EVALUATE THE LIFEEXP FOR EACH COUNTRY TO ALL TIMES IN ANOTHER LOOP:
for(j in unique(b_df$country)){
new_df <- b_df %>%
filter(country == j)
#### Finding the life expectancy mean over all times
mean <- mean(new_df$lifeExp)
#### printing them for each country
if (mean >= 70) { ### finding the lifeexps larger than 70
b_df$result[j] = "Long life expectancy"
} else {
if (mean =< 50) { ### finding the lifeexps smaller than 50
b_df$result[j] = "Short life expectancy"
} else {
b_df$result[j] = "Medium life expectancy" ### finding the lifeexps in between
}
### NOW I EVALUATE THE LIFEEXP FOR EACH COUNTRY TO ALL TIMES IN ANOTHER LOOP:
for(j in unique(b_df$country)){
new_df <- b_df %>%
filter(country == j)
#### Finding the life expectancy mean over all times
mean <- mean(new_df$lifeExp)
#### printing them for each country
if (mean > 70) { ### finding the lifeexps larger than 70
b_df$result[j] = "Long life expectancy"
} else {
if (mean < 50) { ### finding the lifeexps smaller than 50
b_df$result[j] = "Short life expectancy"
} else {
b_df$result[j] = "Medium life expectancy" ### finding the lifeexps in between
}
### NOW I EVALUATE THE LIFEEXP FOR EACH COUNTRY TO ALL TIMES IN ANOTHER LOOP:
for(j in unique(b_df$country)){
new_df <- b_df %>%
filter(country == j)
#### Finding the life expectancy mean over all times
mean <- mean(new_df$lifeExp)
b_df$result <- NA
#### printing them for each country
if (mean > 70) { ### finding the lifeexps larger than 70
b_df$result[j] = "Long life expectancy"
} else {
if (mean < 50) { ### finding the lifeexps smaller than 50
b_df$result[j] = "Short life expectancy"
} else {
b_df$result[j] = "Medium life expectancy" ### finding the lifeexps in between
}
View(b_df)
### NOW I EVALUATE THE LIFEEXP FOR EACH COUNTRY TO ALL TIMES IN ANOTHER LOOP:
for(j in unique(b_df$country)){
new_df <- b_df %>%
filter(country == j)
#### Finding the life expectancy mean over all times
mean <- mean(new_df$lifeExp)
#### printing them for each country
if (mean > 70) { ### finding the lifeexps larger than 70
b_df$result[j] = "Long life expectancy"
} else {
if (mean < 50) { ### finding the lifeexps smaller than 50
b_df$result[j] = "Short life expectancy"
} else {
b_df$result[j] = "Medium life expectancy" ### finding the lifeexps in between
}
### NOW I EVALUATE THE LIFEEXP FOR EACH COUNTRY TO ALL TIMES IN ANOTHER LOOP:
for(j in unique(b_df$country)){
new_df <- b_df %>%
filter(country == j)
#### Finding the life expectancy mean over all times
mean <- mean(new_df$lifeExp)
#### printing them for each country
if (mean > 70) { ### finding the lifeexps larger than 70
print(paste0(i, "has a long life expectancy above 70 years"))
#b_df$result[j] = "Long life expectancy"
} else {
if (mean < 50) { ### finding the lifeexps smaller than 50
print(paste0(i, "has a short life expectancy below 50 years"))
#b_df$result[j] = "Short life expectancy"
} else {
#b_df$result[j] = "Medium life expectancy" ### finding the lifeexps in between
print(paste0(i, "has a life expectancy between 50 and 70 years of age"))
}
### LOOP TIME BABY
b_df <- data.frame()
## LETS FIRST FIND THE COUNTRIES STARTING W A B:
for(i in unique(df$country)) {
if(grepl("^B", i)){
b_df <- rbind(b_df, df[which(df$country %in% i),]) }
}
### NOW I EVALUATE THE LIFEEXP FOR EACH COUNTRY TO ALL TIMES IN ANOTHER LOOP:
for(j in unique(b_df$country)){
new_df <- b_df %>%
filter(country == j)
#### Finding the life expectancy mean over all times
mean <- mean(new_df$lifeExp)
#### printing them for each country
if (mean > 70) { ### finding the lifeexps larger than 70
print(paste0(i, "has a long life expectancy above 70 years"))
#b_df$result[j] = "Long life expectancy"
} else {
if (mean < 50) { ### finding the lifeexps smaller than 50
print(paste0(i, "has a short life expectancy below 50 years"))
#b_df$result[j] = "Short life expectancy"
} else {
#b_df$result[j] = "Medium life expectancy" ### finding the lifeexps in between
print(paste0(i, "has a life expectancy between 50 and 70 years of age"))
}
View(new_df)
### NOW I EVALUATE THE LIFEEXP FOR EACH COUNTRY TO ALL TIMES IN ANOTHER LOOP:
for(j in unique(b_df$country)){
new_df <- b_df %>%
filter(country == j)
#### Finding the life expectancy mean over all times
mean <- mean(new_df$lifeExp)
#### printing them for each country
if (mean > 70) { ### finding the lifeexps larger than 70
print(paste0(j, "has a long life expectancy above 70 years"))
} else {
if (mean < 50) { ### finding the lifeexps smaller than 50
print(paste0(j, "has a short life expectancy below 50 years"))
} else {
print(paste0(j, "has a life expectancy between 50 and 70 years of age"))
}
### NOW I EVALUATE THE LIFEEXP FOR EACH COUNTRY TO ALL TIMES IN ANOTHER LOOP:
for(j in unique(b_df$country)){
new_df <- b_df %>%
filter(country == j)
#### Finding the life expectancy mean over all times
mean <- mean(new_df$lifeExp)
#### printing them for each country
if (mean > 70) { ### finding the lifeexps larger than 70
print(paste0(j, " has a long life expectancy above 70 years"))
} else {
if (mean < 50) { ### finding the lifeexps smaller than 50
print(paste0(j, " has a short life expectancy below 50 years"))
} else {
print(paste0(j, " has a life expectancy between 50 and 70 years of age"))
}
